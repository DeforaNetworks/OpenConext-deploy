Listen {{ apache_app_listen_address.aa }}:{{ loadbalancing.aa.port }}
<Virtualhost {{ apache_app_listen_address.aa }}:{{ loadbalancing.aa.port }}>
    # General setup for the virtual host, inherited from global configuration
    ServerName https://aa.{{ base_domain }}

    ErrorLog "|/usr/bin/logger -p local3.err  -t 'Apache-AA'"
	  CustomLog "|/usr/bin/logger -p local3.info  -t 'Apache-AA'" combined

    RewriteEngine on

    RewriteCond %{REQUEST_URI} !\.html$
    RewriteCond %{REQUEST_URI} !\.js$
    RewriteCond %{REQUEST_URI} !\.svg$
    RewriteCond %{REQUEST_URI} !\.css$
    RewriteCond %{REQUEST_URI} !\.png$
    RewriteCond %{REQUEST_URI} !\.ico$
    RewriteCond %{REQUEST_URI} !\.woff$
    RewriteCond %{REQUEST_URI} !\.woff2$
    RewriteCond %{REQUEST_URI} !\.ttf$
    RewriteCond %{REQUEST_URI} !\.eot$
    RewriteCond %{REQUEST_URI} !aa
    RewriteCond %{REQUEST_URI} !redirect
    RewriteCond %{REQUEST_URI} !fonts
    RewriteRule (.*) /index.html [L]    RewriteRule (.*) /index.html [L]

    ProxyPass /Shibboleth.sso !

    ProxyPass /redirect http://localhost:{{ springapp_tcpport }}/aa/api/redirect retry=0
    ProxyPass /aa/api http://localhost:{{ springapp_tcpport }}/aa/api retry=0
    ProxyPassReverse /aa/api http://localhost:{{ springapp_tcpport }}/aa/api

    DocumentRoot /var/www/attribute-aggregation/current

    <Directory /var/www/attribute-aggregation/current>
      Order       allow,deny
      Allow       from all
      Options     -Indexes
    </Directory>


    # Disable shibboleth health / info check
    <Location ~ "/aa/api/(health|info)">
      allow from all
      satisfy any
    </Location>

    # The EB endpoints are secured with basic auth
    <Location ~ "/aa/api/internal/">
      allow from all
      satisfy any
    </Location>

    <Location />
      AuthType shibboleth
      ShibUseHeaders On
      ShibRequestSetting applicationId attribute-aggregation
      ShibRequireSession On
      require valid-user
    </Location>

    {% if haproxy_backend_tls %}
    SSLEngine on
    SSLCertificateFile      {{ tls.cert_path }}/backend.{{ base_domain }}.pem
    SSLCertificateKeyFile   {{ tls.cert_private_path }}/backend.{{ base_domain }}.key
    Include ssl_backend.conf
    {% endif %}

</VirtualHost>
