#
# HTTPS server configuration
#

# Port mappings
#

server {
    listen       {{ nginx_ipv4_addresses.engine }}:80;
    server_name  engine.{{ base_domain }};

    return       301 https://engine.{{ base_domain }}$request_uri;
}

server {
    listen       {{ nginx_ipv4_addresses.engine }}:443 ssl spdy;
    server_name  engine.{{ base_domain }};

    ssl                  on;
    ssl_certificate      {{ tls.cert_path }}/{{ engine.crt_name }};
    ssl_certificate_key  {{ tls.cert_path }}/{{ engine.key_name }};

    ssl_session_timeout  60m;

	ssl_ciphers ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH;
    ssl_prefer_server_ciphers on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_ecdh_curve secp384r1;
    ssl_stapling on;

    location / {
        proxy_pass http://127.0.0.1:{{ loadbalancing.engine.port }}/;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Port mappings (IPv6)
#

server {
    listen       [::]:80;
    server_name  engine.{{ base_domain }};

    return       301 https://engine.{{ base_domain }}$request_uri;
}

server {
    listen       [::]:443 ssl spdy;
    server_name  engine.{{ base_domain }};

    ssl                  on;
    ssl_certificate      {{ tls.cert_path }}/{{ engine.crt_name }};
    ssl_certificate_key  {{ tls.cert_path }}/{{ engine.key_name }};


    ssl_session_timeout  60m;

	ssl_ciphers ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH;
    ssl_prefer_server_ciphers on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_ecdh_curve secp384r1;
    ssl_stapling on;

    location / {
        proxy_pass http://127.0.0.1:{{ loadbalancing.engine.port }}/;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}



