---
- name: copy over the engineblock crt
  copy: src=files/php-{{ env }}/certs/engineblock.crt dest=~/engineblock.crt
  tags: apis

- name: register engineblock crt content
  shell: sed -e '1d;$d' ~/engineblock.crt | tr -d '\n'
  register: engineblock_crt_content
  changed_when: False
  tags: apis

- name: copy over the api key
  copy: content="{{ lookup('file', 'files/' + env_name + '/certs/apis_pkcs8.pem.encrypted') | vault(env) }}" dest={{ tls.cert_private_path }}/apis_pkcs8.pem
  tags: apis

- name: copy api certificate to correct location
  copy: src=files/{{ env_name }}/certs/apis.crt dest={{ tls.cert_path }}/apis.crt
  tags: apis

- name: register api key content
  shell: sed -e '1d;$d' {{ tls.cert_private_path }}/apis_pkcs8.pem | tr -d '\n'
  register: apis_key_content
  changed_when: False
  tags: apis

- name: register tls crt content
  shell: sed -e '1d;$d' {{ tls.cert_path }}/api.crt | tr -d '\n'
  register: apis_crt_content
  changed_when: False
  tags: apis

- name: create tomcat directories
  file: path={{ item }} state=directory group=tomcat mode=0770
  with_items:
    - "{{ tomcat_low.install_dir }}"
    - "{{ tomcat_low.install_dir }}/wars"
    - "{{ tomcat_low.install_dir }}/{{ tomcat_low.properties_dir }}"
    - "{{ tomcat_low.catalina_base }}"
    - "{{ tomcat_low.log_dir }}"
    - "{{ tomcat_low.lib_dir }}/webapps"
    - "{{ tomcat_low.cache_dir }}/temp"
    - "{{ tomcat_low.cache_dir }}/work"
  notify: restart tomcat-low
  tags: apis

- name: create symlinks in for tomcat_low install
  file: src={{ item.to }} dest={{ item.link }} state=link
  with_items:
    - { link: "{{ tomcat_low.catalina_base }}/logs", to: "{{ tomcat_low.log_dir }}" }
    - { link: "{{ tomcat_low.catalina_base }}/webapps", to: "{{ tomcat_low.lib_dir }}/webapps" }
    - { link: "{{ tomcat_low.catalina_base }}/temp", to: "{{ tomcat_low.cache_dir }}/temp" }
    - { link: "{{ tomcat_low.catalina_base }}/work", to: "{{ tomcat_low.cache_dir }}/work" }
    - { link: "{{ tomcat_low.catalina_base }}/conf", to: "{{ tomcat_low.install_dir }}" }
    - { link: "/etc/init.d/tomcat6-low", to: "/etc/init.d/tomcat6" }
  notify: restart tomcat-low
  tags: apis

- name: copy config files
  template: src={{ item.file_name }}.j2 dest={{ item.dest }}/{{ item.file_name }}
  with_items:
    - { file_name: catalina.properties, dest: "{{ tomcat_low.install_dir }}" }
    - { file_name: server.xml, dest: "{{ tomcat_low.install_dir }}" }
    - { file_name: tomcat6.conf, dest: "{{ tomcat_low.install_dir }}" }
    - { file_name: tomcat6-low, dest: /etc/sysconfig }
    - { file_name: apis.application.properties, dest: "{{ tomcat_low.install_dir }}/{{ tomcat_low.properties_dir }}" }
    - { file_name: surfconext.authn.properties, dest: "{{ tomcat_low.install_dir }}/{{ tomcat_low.properties_dir }}" }
    - { file_name: apis-logback.xml, dest: "{{ tomcat_low.install_dir }}/{{ tomcat_low.properties_dir }}" }
  notify: restart tomcat-low
  tags: apis

- include: "../../tomcat_app/tasks/main.yml"
  vars:
    tomcat_install_dir: "{{ tomcat_low.install_dir }}"
    tomcat_lib_dir: "{{ tomcat_low.lib_dir }}"
    tomcat_cache_dir: "{{ tomcat_low.cache_dir }}"
    tomcat_app_base_dir_name: "{{ tomcat_low.app_base_dir_name }}"
    tomcat_service_name: tomcat6-low
    tomcat_handler_name: tomcat-low
    app_name: apis
    app_version: "1.3.5"
    app_snapshot_timestamp: ""
    app_local_war: ""
    app_group_url: "nl/surfnet/apis"
    app_artifact_id: "apis-authorization-server-war"
    deploy_name: apis
    deploy_xml_name: ROOT
    tomcat_context_path: /
  tags: apis

- name: copy virtual host config
  template: src=apis.conf.j2 dest=/etc/httpd/conf.d/apis.conf
  notify: restart httpd
