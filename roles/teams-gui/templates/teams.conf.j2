Listen {{ apache_app_listen_address.teams }}:{{ loadbalancing.teams.port }}
<Virtualhost {{ apache_app_listen_address.teams }}:{{ loadbalancing.teams.port }}>
    # General setup for the virtual host, inherited from global configuration
    ServerName https://teams.{{ base_domain }}

    ErrorLog "|/usr/bin/logger -p local3.err  -t 'Apache-teams'"
	  CustomLog "|/usr/bin/logger -p local3.info  -t 'Apache-teams'" combined

    RewriteEngine on

    RewriteCond %{REQUEST_URI} !\.html$
    RewriteCond %{REQUEST_URI} !\.js$
    RewriteCond %{REQUEST_URI} !\.svg$
    RewriteCond %{REQUEST_URI} !\.css$
    RewriteCond %{REQUEST_URI} !\.png$
    RewriteCond %{REQUEST_URI} !\.ico$
    RewriteCond %{REQUEST_URI} !\.woff$
    RewriteCond %{REQUEST_URI} !\.woff2$
    RewriteCond %{REQUEST_URI} !\.ttf$
    RewriteCond %{REQUEST_URI} !\.eot$
    RewriteCond %{REQUEST_URI} !teams
    RewriteCond %{REQUEST_URI} !fonts
    RewriteRule (.*) /index.html [L]    RewriteRule (.*) /index.html [L]

    ProxyPass /Shibboleth.sso !

    ProxyPass /api/teams/health http://localhost:{{ springapp_tcpport }}/health retry=0
    ProxyPass /api/teams/info http://localhost:{{ springapp_tcpport }}/info retry=0

    ProxyPass /api/teams http://localhost:{{ springapp_tcpport }}/api/teams retry=0
    ProxyPassReverse /api/teams http://localhost:{{ springapp_tcpport }}/api/teams

    DocumentRoot /var/www/teams/current

    <Directory /var/www/teams/current>
      Order       allow,deny
      Allow       from all
      Options     -Indexes
    </Directory>


    # Enable shibboleth for all other URLs, but the health check and info endpoint
    <Location ~ "/api/teams/(health|info)">
      allow from all
      satisfy any
    </Location>

    <Location ~ "(.*)(eot|svg|ttf|woff2|woff|html|js|css|png|jpg|ico)$">
      allow from all
      satisfy any
    </Location>

    <Location />
      AuthType shibboleth
      ShibUseHeaders On
      ShibRequestSetting applicationId teams
      ShibRequireSession On
      require valid-user
    </Location>
    
    {% if haproxy_backend_tls %}
    SSLEngine on
    SSLCertificateFile      {{ tls.cert_path }}/backend.{{ base_domain }}.pem
    SSLCertificateKeyFile   {{ tls.cert_private_path }}/backend.{{ base_domain }}.key
    SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    SSLHonorCipherOrder     on
    SSLCompression          off
    {% endif %}

</VirtualHost>
