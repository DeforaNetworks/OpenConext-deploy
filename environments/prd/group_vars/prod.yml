---
env: prd
oidc_standalone: true
smtp_server: localhost
error_mail_to: coin-logs@list.surfnet.nl
base_domain: surfconext.nl

php_display_errors: 0

databases:
  names:
    - teams
    - api
    - "{{ engine_database_name }}"
    - "{{ janus_database_name }}"
    - grouper
    - authz-server
    - pdp-server
    - oidc-server
  users:
    - { name: teamsrw, db_name: teams, password: "{{ mysql_passwords.teams }}" }
    - { name: apirw, db_name: api, password: "{{ mysql_passwords.api }}" }
    - { name: "{{ engine_database_user }}", db_name: "{{ engine_database_name }}", password: "{{ mysql_passwords.eb }}" }
    - { name: "{{ janus_database_user }}", db_name: "{{ janus_database_name }}", password: "{{ mysql_passwords.sr }}" }
    - { name: grouperrw, db_name: grouper, password: "{{ mysql_passwords.grouper }}" }
    - { name: authz-serverrw, db_name: authz-server, password: "{{ mysql_passwords.authz_server }}" }
    - { name: pdp-serverrw, db_name: pdp-server, password: "{{ mysql_passwords.pdp_server }}" }
    - { name: oidc-serverrw, db_name: oidc-server, password: "{{ mysql_passwords.oidc_server }}" }

tls:
  cert_path: /etc/pki/tls/certs
  cert_path_ca: /etc/pki/ca-trust/source/anchors/
  cert_private_path: /etc/pki/tls/private

tls_https:
  - name: engine
    key_name: "engine.{{ base_domain }}.key"
    crt_name: "engine.{{ base_domain }}.pem"
    bundle_name: "engine.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_engine_private_key }}"

  - name: engine_api
    key_name: "engine-api.{{ base_domain }}.key"
    crt_name: "engine-api.{{ base_domain }}.pem"
    bundle_name: "engine-api.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_engine-api_private_key }}"

  - name: profile
    key_name: "profile.{{ base_domain }}.key"
    crt_name: "profile.{{ base_domain }}.pem"
    bundle_name: "profile.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_profile_private_key }}"

  - name: serviceregistry
    key_name: "serviceregistry.{{ base_domain }}.key"
    crt_name: "serviceregistry.{{ base_domain }}.pem"
    bundle_name: "serviceregistry.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_serviceregistry_private_key }}"

  - name: teams
    key_name: "teams.{{ base_domain }}.key"
    crt_name: "teams.{{ base_domain }}.pem"
    bundle_name: "teams.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_teams_private_key }}"

  - name: authzserver
    key_name: "authz.{{ base_domain }}.key"
    crt_name: "authz.{{ base_domain }}.pem"
    bundle_name: "authz.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_authz_private_key }}"

  - name: authz_admin
    key_name: "authz-admin.{{ base_domain }}.key"
    crt_name: "authz-admin.{{ base_domain }}.pem"
    bundle_name: "authz-admin.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_authz-admin_private_key }}"

  - name: authz_playground
    key_name: "authz-playground.{{ base_domain }}.key"
    crt_name: "authz-playground.{{ base_domain }}.pem"
    bundle_name: "authz-playground.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_authz-playground_private_key }}"

  - name: voot
    key_name: "voot.{{ base_domain }}.key"
    crt_name: "voot.{{ base_domain }}.pem"
    bundle_name: "voot.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_voot_private_key }}"
  
  - name: pdp
    key_name: "pdp.{{ base_domain }}.key"
    crt_name: "pdp.{{ base_domain }}.pem"
    bundle_name: "pdp.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_pdp_private_key }}"

  - name: oidc
    key_name: "oidc.{{ base_domain }}.key"
    crt_name: "oidc.{{ base_domain }}.pem"
    bundle_name: "oidc.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_oidc_private_key }}"

  - name: aa
    key_name: "aa.{{ base_domain }}.key"
    crt_name: "aa.{{ base_domain }}.pem"
    bundle_name: "aa.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_aa_private_key }}"

  - name: multidata
    key_name: "multidata.{{ base_domain }}.key"
    crt_name: "multidata.{{ base_domain }}.pem"
    bundle_name: "multidata.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_multidata_private_key }}"

  - name: grouper
    key_name: "grouper.{{ base_domain }}.key"
    crt_name: "grouper.{{ base_domain }}.pem"
    bundle_name: "grouper.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_grouper_private_key }}"

  - name: api
    key_name: "api.{{ base_domain }}.key"
    crt_name: "api.{{ base_domain }}.pem"
    bundle_name: "api.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_api_private_key }}"
  
  - name: static
    key_name: "static.{{ base_domain }}.key"
    crt_name: "static.{{ base_domain }}.pem"
    bundle_name: "static.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_static_private_key }}"

apache_server_admin: unix@prolocation.net

janus_ssp_technicalcontact_name: "Surfconext beheer"
janus_ssp_technicalcontact_email: "surfconext-beheer@surfnet.nl"
janus_ssp_managingcontact_name: "Surfconext beheer"
janus_ssp_managingcontact_email: "surfconext-beheer@surfnet.nl"
janus_ssp_title_suffix: "SURFconext productie"

engine_idp_debugging_email_address: "conext-beheer@surfnet.nl"
engine_syslog_priority: 3

engine_janus_user: engineblock

engine_database_name: eb
engine_database_host: "{{ mysql_host }}"
engine_database_port: 3306
engine_database_user: ebrw
engine_database_password: "{{ mysql_passwords.eb }}"

engine_ldap_host: "{{ ldap_host }}"
engine_ldap_bind_dn: "cn=engine,dc=surfconext,dc=nl"
engine_apache_environment: production
engine_apache_symfony_environment: prod

ldap_admin_user: cn=admin,dc=surfconext,dc=nl

ldap_grouper_user: GrouperSystem

janus_database_name: sr
janus_database_host: "{{ mysql_host }}"
janus_database_user: srrw
janus_database_password: "{{ mysql_passwords.sr }}"


janus_teams_oauth_key: https://teams.surfconext.nl/teams/teams.xml

engine_janus_cache_lifetime: 86400

engine_vovalidate_key: engine_api_oauth_key

engine_trusted_proxy_ips:
  - 145.100.191.194
  - 145.100.191.195
#
engine_keys:
  default:
    privateFile: /etc/openconext/engineblock.20140505.key
    publicKey: engineblock.crt
    publicFile: /etc/openconext/engineblock.20140505.crt
  20140505:
    privateFile: /etc/openconext/engineblock.20140505.key
    publicKey: engineblock.crt
    publicFile: /etc/openconext/engineblock.20140505.crt

engine_block:
  metadataRepositories:
    - {
        index: 0,
        type: "database",
        value: "Doctrine"
      }
#    - {
#        index: 0,
#        type: "janus",
#        value: "JanusRestV1"
#      }

tomcat_apps:
  - api
  - grouper
  - mujina-sp
  - mujina-idp

# shibboleth
shibboleth_apps:
  teams:
    entityID: "https://teams.{{ base_domain }}/shibboleth"
    baseurl: ""
  grouper:
    entityID: "https://grouper.{{ base_domain }}/grouper/shibboleth"
    baseurl: "/grouper"
  authz:
    entityID: "https://authz.{{ base_domain }}/shibboleth"
    baseurl: ""
  "authz-admin":
    entityID: "https://authz-admin.{{ base_domain }}/shibboleth"
    baseurl: ""
  pdp:
    entityID: "https://pdp.{{ base_domain }}/shibboleth"
    baseurl: ""
shib:
  engine_domain: "{{ base_domain }}"

# versions of installed apps
teams_version: 4.2.10
#teams_snapshot_timestamp: 20150420.152536-28

api_version: 4.0.1
#api_snapshot_timestamp: 20150419.220130-443

mujina_version: 4.0.2
#mujina_snapshot_timestamp

engine_version: 4.7.5

teams:
  db_name: "teams"
  db_user: "teamsrw"
  db_password: "{{ mysql_passwords.teams }}"
  db_host: "{{ mysql_host }}"
  group_name_context: "urn:collab:group:surfteams.nl:"

engineblock:
  idp_url: https://engine.{{ base_domain }}/authentication/idp/single-sign-on
  idp_entity_id: https://engine.{{ base_domain }}/authentication/idp/metadata

api:
  janus:
    user: "{{ engine_janus_user }}"
    secret: "{{ engine_janus_secret }}"
    uri: https://serviceregistry.{{ base_domain }}/simplesaml/module.php/janus/services/rest/
  jdbc:
    user: apirw
    url: "jdbc:mysql://{{ mysql_host }}/api"
    password: "{{ mysql_passwords.api }} "
  ldap:
    url: ldap://ldap.{{ base_domain }}:389
    userDn: "{{ engine_ldap_bind_dn }}"
    password: "{{ engine_ldap_password }}"
  engineblock:
    user: "{{ engine_database_user }}"
    url: jdbc:mysql://{{ engine_database_host }}:3306/{{ engine_database_name }}
    password: "{{ engine_database_password }}"
  teams:
    user: teamsrw
    url: "jdbc:mysql://{{ mysql_host }}/{{ teams.db_name }}"
    password: "{{ teams.db_password }}"
  oauth:
    callback_url: https://api.{{ base_domain }}/v1/test/oauth-callback.shtml
  staticContentBasePath: https://static.{{ base_domain }}
  saml:
    entityId: https://api.{{ base_domain }}/
    assertionConsumerURI: https://api.{{ base_domain }}/v1/assertionConsumer
  ehcache:
    path: /tmp

grouper:
  db_user: grouperrw
  db_host: "{{ mysql_host }}"
  db_password: "{{ mysql_passwords.grouper }}"

ldap_user: cn=ro,dc=surfconext,dc=nl
ldap_grouper_engine_user: engine

authzserver:
  db_user: authz-serverrw
  db_password: "{{ mysql_passwords.authz_server }}"
  db_host: "{{ mysql_host }}"
  db_name: authz-server

authz_server_version: 1.3.4

voot:
  authz_checkToken_endpoint_url: "https://authz.{{ base_domain }}/oauth/check_token"
  authz_checkToken_clientId: "vootservice"
  authz_checkToken_secret: "{{ voot_authz_checkToken_secret }}"
  oidc_checkToken_endpoint_url: "https://oidc.{{ base_domain }}/introspect"
  oidc_checkToken_clientId: "https@//oidc.test.surfconext.nl"
  oidc_checkToken_secret: "{{ voot_oidc_checkToken_secret }}"
  externalGroupProviders:
    - {
        type: "grouper",
        url: "https://grouper.surfconext.nl/grouper-ws/services/GrouperService_v2_0",
        credentials: {
          username: "{{ ldap_grouper_user }}",
          secret: "{{ external_group_provider_secrets.grouper }}"
        },
        schacHomeOrganization: "surfteams.nl",
        name: "SURFteams",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://groupprovider.surfnet.nl",
        credentials: {
          username: "conext",
          secret: "{{ external_group_provider_secrets.surfnet }}"
        },
        schacHomeOrganization: "surfnet.nl",
        name: "SURFnet",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://publicapi.avans.nl/basic",
        credentials: {
          username: "surfconext",
          secret: "{{ external_group_provider_secrets.avans }}"
        },
        schacHomeOrganization: "avans.nl",
        name: "Avans",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://leo.ic.uva.nl/php-voot-provider",
        credentials: {
          username: "surfconext",
          secret: "{{ external_group_provider_secrets.uva }}"
        },
        schacHomeOrganization: "uva.nl",
        name: "UvA",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://voot.surfsara.nl/php-voot-provider",
        credentials: {
          username: "vootprxy",
          secret: "{{ external_group_provider_secrets.surfsara }}"
        },
        schacHomeOrganization: "sara.nl",
        name: "SURFsara",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://groupprovider.surf.nl",
        credentials: {
          username: "conext",
          secret: "{{ external_group_provider_secrets.surf }}"
        },
        schacHomeOrganization: "surf.nl",
        name: "SURF",
        timeoutMillis: 3000
      }
    - {
        type: "open_social",
        url: "https://groupprovider.sans-ec.nl",
        credentials: {
          username: "conext",
          secret: "{{ external_group_provider_secrets.sans }}"
        },
        schacHomeOrganization: "sans-ec.nl",
        name: "SaNS",
        timeoutMillis: 3000
      }

voot_version: 1.6.2

authz_admin_version: 1.3.6
authz_admin_group: urn:collab:group:surfteams.nl:nl:surfnet:diensten:authz-admins
authzadmin:
  defaultClients:
      - clientId: "{{ authzplayground.springapp_authz_client_id }}"
        secret: "{{ authzplayground.springapp_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
          - members
        grantTypes:
          - authorization_code
          - implicit
          - client_credentials
        redirectUri: https://authz-playground.{{ base_domain }}/redirect
      - clientId: authz-admin
        secret: "{{ authz_admin_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - authorization_code
        redirectUri: https://authz-admin.{{ base_domain }}
        autoApprove: true
      - clientId: surf-teams
        secret: "{{ teams_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - client_credentials
      - clientId: engineblock
        secret: "{{ engineblock_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - client_credentials
      - clientId: pdp_client
        secret: "{{ pdp_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - authorization_code
          - implicit
          - client_credentials
  defaultResourceServers:
    - clientId: vootservice
      secret: "{{ voot.authz_checkToken_secret }}"
    - clientId: csa
      secret: "{{ csa_resource_checking_secret }}"

authz_playground_version: 1.2
authzplayground:
  springapp_authz_client_id: cool_app_id
  springapp_authz_client_secret: "{{ authzplayground_springapp_authz_client_secret }}"
  springapp_oidc_client_id: https@//authz-playground.{{ base_domain }}
  springapp_oidc_client_secret: "{{ authzplayground_springapp_oidc_client_secret }}"

pdp_version: 1.1.6
#pdp_snapshot_timestamp: "20151209.153205-23"
#pdp_html_snapshot_timestamp: "20151209.153243-21"

pdp_debug: true
pdp:
  username: "pdp_admin"
  password: "{{ pdp_password }}"
  db_user: pdp-serverrw
  db_password: "{{ mysql_passwords.pdp_server }}"
  db_host: "{{ mysql_host }}"
  db_name: pdp-server
  spring_profiles_active: prod
  cache_policies: true
  sab_username: coin-test
  sab_password: "{{ pdp_sab_password }}"
  sab_endpoint: https://sab-ng.surfnet.nl/simplesaml/module.php/attributes/server.php

oidc_version: "1.0.2"

oidc:
  environment: prd
  issuer: https://oidc.{{ base_domain }}/
  db_user: oidc-serverrw
  db_password: "{{ mysql_passwords.oidc_server }}"
  db_host: "{{ mysql_host }}"
  db_name: oidc-server
  sp_entity_id: https://oidc.surfconext.nl

  
metadata_exporter_version: 2.0.3
metadata_exporter:
  db_user: srrw
  db_password: "{{ mysql_passwords.sr }}"
  db_host: "{{ mysql_host }}"
  db_name: sr
  password: "{{ metadata_exporter_password }}"

springapp_tcpport_error_handling: 9199

loadbalancing:
  engine: {
    port: 401,
    heartbeat: { url: "/", method: "GET" },
    servers: [
      { label: "prd41", ip: "145.100.191.198" },
      { label: "prd42", ip: "145.100.191.199" },
      { label: "prd43", ip: "145.100.191.200" },
    ]
  }
  profile: {
    port: 402,
    heartbeat: { url: "/favicon.ico", method: "HEAD" },
    servers: [
      { label: "prd41", ip: "145.100.191.198" },
      { label: "prd42", ip: "145.100.191.199" },
      { label: "prd43", ip: "145.100.191.200" },
    ]
  }
  static: {
    port: 403,
    heartbeat: { url: "/media/alive.txt", method: "HEAD" },
    servers: [
      { label: "prd41", ip: "145.100.191.198" },
      { label: "prd42", ip: "145.100.191.199" },
      { label: "prd43", ip: "145.100.191.200" },
    ]
  }
  serviceregistry: {
    port: 405,
    heartbeat: { url: "/", method: "HEAD" },
    servers: [
      { label: "prd41", ip: "145.100.191.198" },
      { label: "prd42", ip: "145.100.191.199" },
      { label: "prd43", ip: "145.100.191.200" },
    ]
  }
  engine_api: {
    port: 404,
    heartbeat: { url: "/", method: "GET" },
    servers: [
      { label: "prd41", ip: "145.100.191.198" },
      { label: "prd42", ip: "145.100.191.199" },
      { label: "prd43", ip: "145.100.191.200" },
    ]
  }
  teams: {
    port: 601,
    heartbeat: { url: "/media/trans-white.png", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  authzserver: {
    port: 602,
    heartbeat: { url: "/media/trans-white.png", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  authz_admin: {
    port: 603,
    heartbeat: { url: "/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  authz_playground: {
    port: 604,
    heartbeat: { url: "/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  voot: {
    port: 605,
    heartbeat: { url: "/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  pdp: {
    port: 613,
    heartbeat: { url: "/pdp/api/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  aa: {
    port: 615,
    heartbeat: { url: "/aa/api/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  metadata_exporter: {
    port: 616,
    heartbeat: { url: "/health", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  oidc: {
    port: 617,
    heartbeat: { url: "/", method: "HEAD" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }
  grouper: {
    port: 606,
    heartbeat: { url: "/grouper-ws/status?diagnosticType=db", method: "GET" },
    servers: [
      { label: "prd61", ip: "145.100.191.201" },
      { label: "prd62", ip: "145.100.191.202" },
      { label: "prd63", ip: "145.100.191.203" },
    ]
  }

haproxy_applications:

  - name: engine
    vhost_name: "engine"
    ip: "{{ engine_ip }}"
    ha_method: "GET"
    ha_url: "/"
    port: 401
    servers: "{{php_servers}}"

  - name: profile
    vhost_name: "profile"
    ip: "{{ profile_ip }}"
    ha_method: "HEAD"
    ha_url: "/favicon.ico"
    port: 402
    servers: "{{php_servers}}"

  - name: serviceregistry
    vhost_name: "serviceregistry"
    ip: "{{ serviceregistry_ip }}"
    ha_method: "HEAD"
    ha_url: "/"
    port: 404
    servers: "{{php_servers}}"

  - name: engine_api
    vhost_name: "engine-api"
    ip: "{{ engine_api_ip }}"
    ha_method: "GET"
    ha_url: "/"
    port: 405
    servers: "{{php_servers}}"

  - name: teams
    vhost_name: "teams"
    ip: "{{ teams_ip }}"
    ha_method: GET
    ha_url: "/media/trans-white.png"
    port: 601
    servers: "{{java_servers}}"

  - name: authzserver
    vhost_name: "authz"
    ip: "{{ authzserver_ip }}"
    ha_method: "GET"
    ha_url: "/health"
    port: 602
    servers: "{{java_servers}}"

  - name: authz_admin
    vhost_name: "authz-admin"
    ip: "{{ authz_admin_ip }}"
    ha_method: "GET"
    ha_url: "/health"
    port: "603"
    servers: "{{java_servers}}"

  - name: authz_playground
    vhost_name: "authz-playground"
    ip: "{{ authz_playground_ip }}"
    ha_method: "GET"
    ha_url: "/health"
    port: "604"
    servers: "{{java_servers}}"

  - name: voot
    vhost_name: "voot"
    ip: "{{ voot_ip }}"
    ha_method: "GET"
    ha_url: "/health"
    port: 605
    servers: "{{java_servers}}"

  - name: pdp
    vhost_name: "pdp"
    ip: "{{ pdp_ip }}"
    ha_method: "GET"
    ha_url: "/pdp/api/health"
    port: 613
    servers: "{{java_servers}}"

  - name: oidc
    vhost_name: "oidc"
    ip: "{{ oidc_ip }}"
    ha_method: "HEAD"
    ha_url: "/"
    port: "614"
    servers: "{{java_servers}}"

  - name: multidata
    vhost_name: "multidata"
    ip: "{{ multidata_ip }}"
    ha_method: "GET"
    ha_url: "/health"
    port: 616
    servers: "{{java_servers}}"

  - name: grouper
    vhost_name: "grouper"
    ip: "{{ grouper_ip }}"
    ha_method: "GET"
    ha_url: "/grouper-ws/status?diagnosticType=db"
    port: 606
    servers: "{{java_servers}}"
  
  - name: static
    vhost_name: "static"
    ip: "{{ static_ip }}"
    ha_method: "GET"
    ha_url: "/grouper-ws/status?diagnosticType=db"
    port: 403
    servers: "{{ php_servers }}"

php_servers:
   - { ip: "145.100.191.198", label: "PRD41"}
   - { ip: "145.100.191.199", label: "PRD42"}
   - { ip: "145.100.191.200", label: "PRD43"}
java_servers:
   - { ip: "145.100.191.201", label: "PRD61"}
   - { ip: "145.100.191.202", label: "PRD62"}
   - { ip: "145.100.191.203", label: "PRD63"}
